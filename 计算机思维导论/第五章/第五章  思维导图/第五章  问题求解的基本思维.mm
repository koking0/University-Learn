<map version="1.0.1"><node CREATED="1546516466999" ID="ID_root" MODIFIED="1546516466999" TEXT="第五章  问题求解的基本思维"><node CREATED="1546516466999" ID="ID_4d58027b2c0b" POSITION="right" MODIFIED="1546516466999" TEXT="计算学科是利用计算机进行问题求解的相关技术和理论的学科，问题求解的核心是算法和系统，算法和系统都可以通过计算机语言表达为机器可以理解和执行的程序。"></node><node CREATED="1546516466999" ID="ID_1d56675ee18a" POSITION="right" MODIFIED="1546516466999" TEXT="计算机语言"><node CREATED="1546516466999" ID="ID_792ce5df1a70" MODIFIED="1546516466999" TEXT="计算机语言是语法、语义与词汇的集合，它用来表达计算机程序。"></node><node CREATED="1546516466999" ID="ID_8f9c6fc466be" MODIFIED="1546516466999" TEXT="程序是指某种程序设计语言编制的、计算机能够执行的指令序列，表达的是让计算机求解问题的步骤和方法，计算机通过执行程序，进行问题求解，扩展计算机的功能，方便人们使用计算机。"></node><node CREATED="1546516466999" ID="ID_6a6061239032" MODIFIED="1546516466999" TEXT="计算机语言的发展过程经历了机器语言、汇编语言、高级语言和构件化语言四个阶段。"><node CREATED="1546516466999" ID="ID_f72f797a8cd7" MODIFIED="1546516466999" TEXT="机器语言"><node CREATED="1546516466999" ID="ID_3065a9092581" MODIFIED="1546516466999" TEXT="计算机的指令系统是指一组能够识别和执行的二进制编码表达的指令集合，使用二进制编码的指令编写程序的语言被称为机器语言。"></node></node><node CREATED="1546516466999" ID="ID_6216ef581f5b" MODIFIED="1546516466999" TEXT="汇编语言"><node CREATED="1546516466999" ID="ID_ce1c3b2d4c96" MODIFIED="1546516466999" TEXT="汇编语言使用助记符来代替机器语言的指令码，使机器语言符号化，从而提高编码效率。"></node><node CREATED="1546516466999" ID="ID_87f19b9863c3" MODIFIED="1546516466999" TEXT="使用汇编语言的助记符编写的程序称为汇编语言源程序。"></node><node CREATED="1546516466999" ID="ID_764df47a3cd3" MODIFIED="1546516466999" TEXT="汇编语言源程序必须转换为机器语言程序才能够被计算机执行，汇编程序是一个编译器，用于将助记符与机器指令一一对应地翻译为机器语言程序。"></node><node CREATED="1546516466999" ID="ID_614dc89b5f4d" MODIFIED="1546516466999" TEXT="不同计算机的指令系统不同，因此汇编语言源程序与计算机系统有关，程序设计人员需要深入了解计算机硬件，汇编语言程序的通用性差。"></node></node><node CREATED="1546516466999" ID="ID_4884a30202cf" MODIFIED="1546516466999" TEXT="高级语言与编译器"><node CREATED="1546516466999" ID="ID_756c9a5a0c37" MODIFIED="1546516466999" TEXT="助记符书写的直观性差、程序的通用性差、编程繁琐。"></node><node CREATED="1546516466999" ID="ID_03c533abf1a6" MODIFIED="1546516466999" TEXT="高级语言"><node CREATED="1546516466999" ID="ID_514e8771bf45" MODIFIED="1546516466999" TEXT="高级语言是类似于自然语言、以语句和函数为单位书写程序的编程语言，高级语言编写的程序被称为高级语言源程序。"></node><node CREATED="1546516466999" ID="ID_f18e993afedf" MODIFIED="1546516466999" TEXT="高级语言比较接近自然语言，直观、通用、易学、编程效率高。高级语言与机器无关，编程者不需要理解机器的硬件结构，程序易于移植。"></node></node><node CREATED="1546516466999" ID="ID_f4d87da62a62" MODIFIED="1546516466999" TEXT="编译器"><node CREATED="1546516466999" ID="ID_47c90ebaee60" MODIFIED="1546516466999" TEXT="编译器能将高级语言源程序翻译为可执行的机器语言程序。"></node><node CREATED="1546516466999" ID="ID_bb6825be6f0d" MODIFIED="1546516466999" TEXT="编译器先使用其编译程序将高级语言源程序转换为汇编语言源程序，再由汇编程序将汇编语言源程序转换为机器可执行的二进制语言程序。"></node></node></node><node CREATED="1546516466999" ID="ID_cd473a3c8ac5" MODIFIED="1546516466999" TEXT="构件化语言"><node CREATED="1546516466999" ID="ID_de6b2db4eb11" MODIFIED="1546516466999" TEXT="使用高级语言编程时，需要一条一条语句地书写程序，编程效率不高，在开发复杂的大规模程序时较为困难。"></node><node CREATED="1546516466999" ID="ID_fb3a0a413c14" MODIFIED="1546516466999" TEXT="构件化语言开发环境中的每一个构件都是由一系列语句完成的复杂程序，能够完成一定功能，visual basic（VB）语言开发环境中包括按钮、文本框、标签等控件，构件化语言是可视化的编程语言。"></node><node CREATED="1546516466999" ID="ID_98702e1e0bcf" MODIFIED="1546516466999" TEXT="在使用构件化语言编写程序时，只需要关心构件的布局、属性和功能，不需要关心构件本身的实现细节。"></node></node><node CREATED="1546516466999" ID="ID_96df0441fa91" MODIFIED="1546516466999" TEXT="编程语言的分层结构"><node CREATED="1546516466999" ID="ID_a07195091dae" MODIFIED="1546516466999" TEXT="越高级的编程语言其结构越复杂，执行效率越低，对计算机软件、硬件系统的性能要求越高。"></node><node CREATED="1546516466999" ID="ID_58306cc72637" MODIFIED="1546516466999" TEXT="越低级的编程语言其结构越简单，执行效率越高，对计算机软件、硬件系统的性能要求越低。"></node></node><node CREATED="1546516466999" ID="ID_f71dd3bcf0b8" MODIFIED="1546516466999" TEXT="java虚拟机"><node CREATED="1546516466999" ID="ID_5c4a9ab76ea0" MODIFIED="1546516466999" TEXT="java是一种面向对象的编程语言。"></node><node CREATED="1546516466999" ID="ID_e1359a49476b" MODIFIED="1546516466999" TEXT="java源程序编译后会生成.class文件，称为字节码文件。"></node><node CREATED="1546516466999" ID="ID_a2af3ec4789a" MODIFIED="1546516466999" TEXT="java虚拟机（java virtual machine，JVM）负责将字节码文件翻译成特定平台下的机器码然后运行，也就是说，只要在不同平台上安装对应的 &amp;nbsp; &amp;nbsp; &amp;nbsp; JVM，就可以运行java字节码文件。"></node><node CREATED="1546516466999" ID="ID_99d792b62ecd" MODIFIED="1546516466999" TEXT="java虚拟机有自己完善的硬件系统，如处理器、堆栈、寄存器等，还有相应的指令系统，java虚拟机屏蔽了与具体操作系统平台的相关信息，使得java程序只需生成java虚拟机上运行的目标代码（字节码），就额可以在多种平台上不加修改的运行。"></node></node></node></node><node CREATED="1546516466999" ID="ID_329715980df1" POSITION="right" MODIFIED="1546516466999" TEXT="程序设计基础"><node CREATED="1546516466999" ID="ID_1fc4b14d5aea" MODIFIED="1546516466999" TEXT="程序设计的本质"><node CREATED="1546516466999" ID="ID_9b9562d21928" MODIFIED="1546516466999" TEXT="程序设计的本质是设计能够利用计算机的五个部件完成特定任务的指令序列。"></node></node><node CREATED="1546516466999" ID="ID_15f6f51a499f" MODIFIED="1546516466999" TEXT="常量"><node CREATED="1546516466999" ID="ID_ed5fb70e83f9" MODIFIED="1546516466999" TEXT="常量指在程序运行过程中值不能改变的量，通常是固定的数值或字符。"></node></node><node CREATED="1546516466999" ID="ID_57489f407094" MODIFIED="1546516466999" TEXT="变量"><node CREATED="1546516466999" ID="ID_8747d8fc58c5" MODIFIED="1546516466999" TEXT="在程序运行过程中，其值可以改变的量称为变量。"></node><node CREATED="1546516466999" ID="ID_dd2f865cbff6" MODIFIED="1546516466999" TEXT="变量占据内存中的一块存储单元，用来存放数据，存储单元中的数据可以改变，给存储单元起的名字，就是变量名，在存储单元中存放的数据就是变量的值。"></node></node><node CREATED="1546516466999" ID="ID_3c86063ff260" MODIFIED="1546516466999" TEXT="算术运算符"><node CREATED="1546516466999" ID="ID_8d80ecb7611f" MODIFIED="1546516466999" TEXT="算术运算符的作用是进行算术运算，用算术运算符将运算对象连接起来的表达式称为算术表达式。"></node><node CREATED="1546516466999" ID="ID_01ed219b234a" MODIFIED="1546516466999" TEXT="运算符"><node CREATED="1546516466999" ID="ID_b43b74390fc9" MODIFIED="1546516466999" TEXT="^"><node CREATED="1546516466999" ID="ID_3baa8a0ccc76" MODIFIED="1546516466999" TEXT="乘方"><node CREATED="1546516466999" ID="ID_26f5cba99cfc" MODIFIED="1546516466999" TEXT="1级"></node></node></node><node CREATED="1546516466999" ID="ID_6cd0039da091" MODIFIED="1546516466999" TEXT="-"><node CREATED="1546516466999" ID="ID_db8a3159f4a7" MODIFIED="1546516466999" TEXT="负号"><node CREATED="1546516466999" ID="ID_f8a86ab108e5" MODIFIED="1546516466999" TEXT="2级"></node></node></node><node CREATED="1546516466999" ID="ID_19bd64ee64b5" MODIFIED="1546516466999" TEXT="*"><node CREATED="1546516466999" ID="ID_cc1b3db69e59" MODIFIED="1546516466999" TEXT="乘"><node CREATED="1546516466999" ID="ID_ab5dcbbc8c33" MODIFIED="1546516466999" TEXT="3级"></node></node></node><node CREATED="1546516466999" ID="ID_e4a2cba8f19e" MODIFIED="1546516466999" TEXT="/"><node CREATED="1546516466999" ID="ID_b888b9375150" MODIFIED="1546516466999" TEXT="除"><node CREATED="1546516466999" ID="ID_ea6f9d2dbb86" MODIFIED="1546516466999" TEXT="3级"></node></node></node><node CREATED="1546516466999" ID="ID_ad1d0050831a" MODIFIED="1546516466999" TEXT="\"><node CREATED="1546516466999" ID="ID_6acb5b3bc71f" MODIFIED="1546516466999" TEXT="整除"><node CREATED="1546516466999" ID="ID_f63cd2b12b7d" MODIFIED="1546516466999" TEXT="4级"></node></node></node><node CREATED="1546516466999" ID="ID_07a68b3bcb5d" MODIFIED="1546516466999" TEXT="Mod"><node CREATED="1546516466999" ID="ID_2bc1d35e4ecb" MODIFIED="1546516466999" TEXT="取模"><node CREATED="1546516466999" ID="ID_1d5d5d2b3e01" MODIFIED="1546516466999" TEXT="5级"></node></node></node><node CREATED="1546516466999" ID="ID_7df7e48ad13d" MODIFIED="1546516466999" TEXT="+"><node CREATED="1546516466999" ID="ID_e348de5ed53d" MODIFIED="1546516466999" TEXT="加"><node CREATED="1546516466999" ID="ID_71ae729207f8" MODIFIED="1546516466999" TEXT="6级"></node></node></node><node CREATED="1546516466999" ID="ID_39ada6642296" MODIFIED="1546516466999" TEXT="-"><node CREATED="1546516466999" ID="ID_be256c15e7e1" MODIFIED="1546516466999" TEXT="减"><node CREATED="1546516466999" ID="ID_3aa8ae719789" MODIFIED="1546516466999" TEXT="6级"></node></node></node></node></node><node CREATED="1546516466999" ID="ID_16ef93fbd7f1" MODIFIED="1546516466999" TEXT="关系运算符"><node CREATED="1546516466999" ID="ID_156463e0a9c2" MODIFIED="1546516466999" TEXT="关系运算符用于比较两个操作数的关系，用关系运算符链接两个表达式称为关系表达式，若关系成立，则表达式值为真（TRUE），否则为假（FALSE）。"></node><node CREATED="1546516466999" ID="ID_d776a3d79cc6" MODIFIED="1546516466999" TEXT="关系运算符的操作数可以是数值、字符串等数据。"></node><node CREATED="1546516466999" ID="ID_58a98c4a6a70" MODIFIED="1546516466999" TEXT="运算符"><node CREATED="1546516466999" ID="ID_518d0405d128" MODIFIED="1546516466999" TEXT="="><node CREATED="1546516466999" ID="ID_97db691dcecf" MODIFIED="1546516466999" TEXT="等于"></node></node><node CREATED="1546516466999" ID="ID_c9e22d6bf65a" MODIFIED="1546516466999" TEXT="&amp;gt;"><node CREATED="1546516466999" ID="ID_447718ca793e" MODIFIED="1546516466999" TEXT="大于"></node></node><node CREATED="1546516466999" ID="ID_3a53e53937af" MODIFIED="1546516466999" TEXT="&amp;lt;"><node CREATED="1546516466999" ID="ID_f47d88e4d1f7" MODIFIED="1546516466999" TEXT="小于"></node></node><node CREATED="1546516466999" ID="ID_c65c63cd67a0" MODIFIED="1546516466999" TEXT="&amp;gt;="><node CREATED="1546516466999" ID="ID_b503991f9be7" MODIFIED="1546516466999" TEXT="大于等于"></node></node><node CREATED="1546516466999" ID="ID_d88d23d2ef23" MODIFIED="1546516466999" TEXT="&amp;lt;="><node CREATED="1546516466999" ID="ID_4984e7ed41a1" MODIFIED="1546516466999" TEXT="小于等于"></node></node><node CREATED="1546516466999" ID="ID_0d25d92c9f05" MODIFIED="1546516466999" TEXT="&amp;lt;&amp;gt;"><node CREATED="1546516466999" ID="ID_5eb9ce68a159" MODIFIED="1546516466999" TEXT="不等于"></node></node></node></node><node CREATED="1546516466999" ID="ID_c31ca9bd3a22" MODIFIED="1546516466999" TEXT="逻辑运算符"><node CREATED="1546516466999" ID="ID_3250ef1f7e9d" MODIFIED="1546516466999" TEXT="逻辑运算符用于对操作数进行逻辑运算，用逻辑运算符链接关系表达式或逻辑值称为逻辑表达式，逻辑表达式的结果为TRUE或FALSE。"></node><node CREATED="1546516466999" ID="ID_e651424a7c19" MODIFIED="1546516466999" TEXT="运算符"><node CREATED="1546516466999" ID="ID_094f5c50881c" MODIFIED="1546516466999" TEXT="not"><node CREATED="1546516466999" ID="ID_8c6f9271afa8" MODIFIED="1546516466999" TEXT="取反"></node></node><node CREATED="1546516466999" ID="ID_73ac64664c85" MODIFIED="1546516466999" TEXT="and"><node CREATED="1546516466999" ID="ID_fb5a4435008b" MODIFIED="1546516466999" TEXT="与"></node></node><node CREATED="1546516466999" ID="ID_c10b15db2442" MODIFIED="1546516466999" TEXT="or"><node CREATED="1546516466999" ID="ID_951ce06f3bbb" MODIFIED="1546516466999" TEXT="或"></node></node><node CREATED="1546516466999" ID="ID_82efdef980f1" MODIFIED="1546516466999" TEXT="xor"><node CREATED="1546516466999" ID="ID_9ecab6b661a3" MODIFIED="1546516466999" TEXT="异或"></node></node></node></node></node><node CREATED="1546516466999" ID="ID_1d19e6529775" POSITION="right" MODIFIED="1546516466999" TEXT="算法"><node CREATED="1546516466999" ID="ID_d345f889a3da" MODIFIED="1546516466999" TEXT="在编写程序之前，首先要找出解决问题的方法，并将其转换成计算机能够理解并执行的步骤，即算法。"></node><node CREATED="1546516466999" ID="ID_a7c832a6fdb1" MODIFIED="1546516466999" TEXT="什么是算法"><node CREATED="1546516466999" ID="ID_2e66b74296d6" MODIFIED="1546516466999" TEXT="程序=算法+数据结构"><node CREATED="1546516466999" ID="ID_34f3b539ff66" MODIFIED="1546516466999" TEXT="算法是解决一个问题所采取的一系列步骤。"></node><node CREATED="1546516466999" ID="ID_c4788cea1fd6" MODIFIED="1546516466999" TEXT="数据结构是指程序中数据的类型和组织形式。"></node></node><node CREATED="1546516466999" ID="ID_d653e8d7d922" MODIFIED="1546516466999" TEXT="算法给出了解决问题的方法和步骤，是程序的灵魂，决定如何操作数据，如何解决问题。"></node><node CREATED="1546516466999" ID="ID_753cb67284ce" MODIFIED="1546516466999" TEXT="同一个问题可以有多种不同算法。"></node></node><node CREATED="1546516466999" ID="ID_68e414197590" MODIFIED="1546516466999" TEXT="算法举例"><node CREATED="1546516466999" ID="ID_f171ce715695" MODIFIED="1546516466999" TEXT="计算机程序的算法，必须是计算机能够运行的方法。"></node><node CREATED="1546516466999" ID="ID_a550cf4842d0" MODIFIED="1546516466999" TEXT="判断算法是否正确的方法：跟踪上述算法的执行过程，理解变量的作用、程序设计时可用的部件和功能，验证算法的正确性。"></node></node><node CREATED="1546516466999" ID="ID_6ba6c0f59219" MODIFIED="1546516466999" TEXT="算法的表示"><node CREATED="1546516466999" ID="ID_abf52f7cfe89" MODIFIED="1546516466999" TEXT="算法的表示方法有很多种，常用的有自然语言、伪代码、传统流程图、N-S流程图等。"></node><node CREATED="1546516466999" ID="ID_ecba59c78691" MODIFIED="1546516466999" TEXT="自然语言"><node CREATED="1546516466999" ID="ID_1dca8d722423" MODIFIED="1546516466999" TEXT="拖沓冗长，容易出现歧义。"></node></node><node CREATED="1546516466999" ID="ID_bb8e848c1086" MODIFIED="1546516466999" TEXT="伪代码"><node CREATED="1546516466999" ID="ID_e8c4c5a77583" MODIFIED="1546516466999" TEXT="介于自然语言和计算机语言之间的文字和符号来描述算法。"></node><node CREATED="1546516466999" ID="ID_6b1203373624" MODIFIED="1546516466999" TEXT="描述方法比较灵活，修改方便，易于转变为程序，但是当情况比较复杂时，不够直观，而且而容易出现逻辑错误。"></node></node><node CREATED="1546516466999" ID="ID_abae0b6225ad" MODIFIED="1546516466999" TEXT="传统流程图"><node CREATED="1546516466999" ID="ID_dff794f48cbc" MODIFIED="1546516466999" TEXT="比较直观，它使用一些图框来表示各种操作，用箭头表示语句的执行顺序。"></node></node><node CREATED="1546516466999" ID="ID_f5d40966cb7f" MODIFIED="1546516466999" TEXT="N-S流程图"><node CREATED="1546516466999" ID="ID_1a790cfe1bcc" MODIFIED="1546516466999" TEXT="N-S流程图又称盒图，其中所有结构都用方框表示，挥之方便安避免了使用箭头任意跳转所造成的混乱，更加符合结构化程序设计的原则。"></node></node><node CREATED="1546516466999" ID="ID_56b7964e9b66" MODIFIED="1546516466999" TEXT="算法应该具有的特性"><node CREATED="1546516466999" ID="ID_ff569e5b285b" MODIFIED="1546516466999" TEXT="有穷性"><node CREATED="1546516466999" ID="ID_c286a824995a" MODIFIED="1546516466999" TEXT="算法中的每一个步骤都是确定的，不能含糊、模棱两可，算法中的每一个步骤不应当被解释为多种含义。"></node></node><node CREATED="1546516466999" ID="ID_1f7f7176592a" MODIFIED="1546516466999" TEXT="输入"><node CREATED="1546516466999" ID="ID_d16e4b8c4316" MODIFIED="1546516466999" TEXT="算法可以有多个输入，也可以没有输入。"></node></node><node CREATED="1546516466999" ID="ID_ae29f0eaf273" MODIFIED="1546516466999" TEXT="输出"><node CREATED="1546516466999" ID="ID_e79416d2cef7" MODIFIED="1546516466999" TEXT="算法必须有一个或多个输出，用于显示程序运行的结果。"></node></node><node CREATED="1546516466999" ID="ID_4a916c1fac5e" MODIFIED="1546516466999" TEXT="可行性"><node CREATED="1546516466999" ID="ID_9f8a26557494" MODIFIED="1546516466999" TEXT="算法中的每一个步骤都是可以执行的，都能得到确定的结果，而不能无法执行。"></node></node></node></node><node CREATED="1546516466999" ID="ID_94b37ee6386d" MODIFIED="1546516466999" TEXT="算法类问题"><node CREATED="1546516467000" ID="ID_61f7ba051592" MODIFIED="1546516467000" TEXT="算法类问题求解的第一步是数学建模，数学建模是一种基于数学的思维方式，运用数学的语言和方法，通过抽象和简化建立对实际问题的描述和定义，数学模型将现实世界的问题抽象成数学模型，可以发现其本质以及能否求解，找到求解问题的方法和算法。"></node><node CREATED="1546516467000" ID="ID_771d0b094fbe" MODIFIED="1546516467000" TEXT="哥尼斯堡七桥问题"><node CREATED="1546516467000" ID="ID_616604cc193b" MODIFIED="1546516467000" TEXT="数学建模"><node CREATED="1546516467000" ID="ID_bea12d7930df" MODIFIED="1546516467000" TEXT="去除哥尼斯堡七桥问题的无关语义，将其抽象成由节点和连接节点的边构成的图。"></node></node><node CREATED="1546516467000" ID="ID_d06168267293" MODIFIED="1546516467000" TEXT="一笔画问题"><node CREATED="1546516467000" ID="ID_038ed285cf51" MODIFIED="1546516467000" TEXT="七桥问题所构成的图中，没有一个节点含有偶数条边，所以哥尼斯堡七桥问题无解。"></node></node></node><node CREATED="1546516467000" ID="ID_c9f207db1ce0" MODIFIED="1546516467000" TEXT="旅行商问题"><node CREATED="1546516467000" ID="ID_917865282ebc" MODIFIED="1546516467000" TEXT="TSP（traveling salesman problem）是最具代表性的组合优化问题。"></node><node CREATED="1546516467000" ID="ID_5908efdfb286" MODIFIED="1546516467000" TEXT="数学建模"><node CREATED="1546516467000" ID="ID_deee461c46a7" MODIFIED="1546516467000" TEXT="假定有N个城市，任意两个城市之间的距离为T，TSP的本质是寻找城市的访问顺序，求最小的T和，采用遍历策略。"></node><node CREATED="1546516467000" ID="ID_96bdd70e6a32" MODIFIED="1546516467000" TEXT="遍历策略对于小规模的TSP是有效的，但是对于大规模的TSP，N个城市的组合路线为（N-1）！，其组合路径数随着城市数目的增长呈爆炸式增长。"></node></node><node CREATED="1546516467000" ID="ID_44dc84fc1ddb" MODIFIED="1546516467000" TEXT="简化求解方法"><node CREATED="1546516467000" ID="ID_866e487cc6c8" MODIFIED="1546516467000" TEXT="贪心算法"><node CREATED="1546516467000" ID="ID_eca3702661e0" MODIFIED="1546516467000" TEXT="贪心算法策略的基本思想是：一定做出当前状况的最好选择。"></node><node CREATED="1546516467000" ID="ID_fb865730dafb" MODIFIED="1546516467000" TEXT="贪心算法求解的并非最优解，而是可行解。"></node></node><node CREATED="1546516467000" ID="ID_050ba77562db" MODIFIED="1546516467000" TEXT="分治法"></node><node CREATED="1546516467000" ID="ID_3f594987c870" MODIFIED="1546516467000" TEXT="动态规划"></node><node CREATED="1546516467000" ID="ID_7285298c9173" MODIFIED="1546516467000" TEXT="启发式算法"></node></node></node></node><node CREATED="1546516467000" ID="ID_fa34583f9c26" MODIFIED="1546516467000" TEXT="算法分析"><node CREATED="1546516467000" ID="ID_dc503472dd33" MODIFIED="1546516467000" TEXT="对于求解一个问题的算法，需要分析其正确性和复杂性"></node><node CREATED="1546516467000" ID="ID_0910d353c2c7" MODIFIED="1546516467000" TEXT="算法的正确性"><node CREATED="1546516467000" ID="ID_6b3fe6a3e0dc" MODIFIED="1546516467000" TEXT="算法的正确性是指问题求解的过程、方法是否正确，输出结果是否正确。"></node><node CREATED="1546516467000" ID="ID_ad7d440e2d36" MODIFIED="1546516467000" TEXT="算法的正确性相对易于分析，只需要考察计算的结果就可以了。"></node></node><node CREATED="1546516467000" ID="ID_525348d1d395" MODIFIED="1546516467000" TEXT="算法的复杂性"><node CREATED="1546516467000" ID="ID_ffaa14e8b4f5" MODIFIED="1546516467000" TEXT="算法的时间复杂性"><node CREATED="1546516467000" ID="ID_5270291c57f9" MODIFIED="1546516467000" TEXT="算法的时间复杂性，指的是算法运行所需的时间，如果一个问题的规模为n，算法运行的时间记为T（n）。"></node><node CREATED="1546516467000" ID="ID_60eee1300d70" MODIFIED="1546516467000" TEXT="常用O记法表示算法的时间复杂性，O表示其量级。"></node></node><node CREATED="1546516467000" ID="ID_867bb80ede4f" MODIFIED="1546516467000" TEXT="算法的空间复杂性"><node CREATED="1546516467000" ID="ID_7a89da232b9f" MODIFIED="1546516467000" TEXT="算法的空间复杂性，指的是算法在执行过程中所占用的存储空间的大小，用S（n）表示。"></node></node></node></node></node><node CREATED="1546516467000" ID="ID_2314bc988bf8" POSITION="right" MODIFIED="1546516467000" TEXT="算法设计"><node CREATED="1546516467000" ID="ID_a7ad8e418307" MODIFIED="1546516467000" TEXT="顺序结构"><node CREATED="1546516467000" ID="ID_c2cb5fbfc232" MODIFIED="1546516467000" TEXT="顺序结构按照语句的先后顺序执行程序，它是程序设计中最简单的控制结构，它一般包括输入、处理和输出三个步骤。"></node></node><node CREATED="1546516467000" ID="ID_814ca999928b" MODIFIED="1546516467000" TEXT="选择结构"><node CREATED="1546516467000" ID="ID_c3ba81787835" MODIFIED="1546516467000" TEXT="选择结构用于判断给定的条件，根据判断的结果来控制程序的流程。"></node></node><node CREATED="1546516467000" ID="ID_873294bc4ce8" MODIFIED="1546516467000" TEXT="循环结构"><node CREATED="1546516467000" ID="ID_b0e42d9995e1" MODIFIED="1546516467000" TEXT="循环结构是用于实现同一段程序多次执行的一种控制结构。"></node><node CREATED="1546516467000" ID="ID_ac9f102e8d31" MODIFIED="1546516467000" TEXT="For…Next循环是计数型循环，主要用于循环次数已知的情况，它的本质是当型循环。"></node><node CREATED="1546516467000" ID="ID_ee0b8e8265b2" MODIFIED="1546516467000" TEXT="穷举法又称枚举法，它的基本思路就是一一列举所有的可能性，逐个进行排查，穷举法的核心是找出问题的所有可能解，并针对每种可能逐个进行判断，最终找出问题的解。"></node></node><node CREATED="1546516467000" ID="ID_837125c80969" MODIFIED="1546516467000" TEXT="数组"><node CREATED="1546516467000" ID="ID_0280c9343192" MODIFIED="1546516467000" TEXT="数组，也称线性表（Linear List），是一种数据结构，一个数组是n个具有相同特性的数据元素的有限序列。"></node><node CREATED="1546516467000" ID="ID_c6b03710c8e4" MODIFIED="1546516467000" TEXT="数组的相邻元素之间存在着序偶关系。"></node><node CREATED="1546516467000" ID="ID_be19fd64d933" MODIFIED="1546516467000" TEXT="数组的处理实际上就是处理数组元素的过程，按顺序对每个数组元素进行处理的过程称为数组的遍历。"><node CREATED="1546516467000" ID="ID_68265b666a8f" MODIFIED="1546516467000" TEXT="搜索"><node CREATED="1546516467000" ID="ID_20fa13bcc08d" MODIFIED="1546516467000" TEXT="在数组中，查找满足条件的所有元素，并求和、计数等。"></node><node CREATED="1546516467000" ID="ID_0939710146ad" MODIFIED="1546516467000" TEXT="算法设计：遍历数组元素的过程中，判断每个元素是否满足条件，如满足条件则作出处理。"></node></node><node CREATED="1546516467000" ID="ID_db15f8a78427" MODIFIED="1546516467000" TEXT="求最大值"><node CREATED="1546516467000" ID="ID_c0889d85190d" MODIFIED="1546516467000" TEXT="算法的基本思想是使用变量max，先将第0个元素赋给max，然后遍历整个数组，max与每一个元素比较，如果max&amp;lt;a[i]，则使max=a[i]，这样就可以保证max中存放的是最大的数。"></node></node><node CREATED="1546516467000" ID="ID_fbb2cf9f7656" MODIFIED="1546516467000" TEXT="排序"><node CREATED="1546516467000" ID="ID_e7e70083c1ca" MODIFIED="1546516467000" TEXT="排序是最常见的问题，其本质是对一组对象按照某种规则进行有序排列的过程。"></node><node CREATED="1546516467000" ID="ID_f80a4d3ebb0a" MODIFIED="1546516467000" TEXT="在计算科学中，排序是许多复杂问题求解的基础，如数据库查询、数据挖掘等，通过排序可以有效降低问题求解算法的执行时间。"></node><node CREATED="1546516467000" ID="ID_45bedc81f193" MODIFIED="1546516467000" TEXT="算法"><node CREATED="1546516467000" ID="ID_94f720fb9108" MODIFIED="1546516467000" TEXT="冒泡法"><node CREATED="1546516467000" ID="ID_757aa7ed655e" MODIFIED="1546516467000" TEXT="每轮依次比较两个相邻元素，如果前大后小则交换。"></node></node><node CREATED="1546516467000" ID="ID_b3127b7bc67c" MODIFIED="1546516467000" TEXT="选择法"><node CREATED="1546516467000" ID="ID_be39644bb48f" MODIFIED="1546516467000" TEXT="每轮次找到最小值，做一次交换。"></node></node><node CREATED="1546516467000" ID="ID_c57cddea47b2" MODIFIED="1546516467000" TEXT="两种算法的时间复杂度都未O（n^2）"></node><node CREATED="1546516467000" ID="ID_903354c4840f" MODIFIED="1546516467000" TEXT="快速排序"><node CREATED="1546516467000" ID="ID_45c23d4d6ac3" MODIFIED="1546516467000" TEXT="从序列中任意取出一个元素作为中心，所有比它小的都放在左侧，比它大的都放在右侧，形成左右两个序列；再对各子序列重新选择中心元素并按照此规则调整；直到每个子序列只剩下一个元素。"></node></node><node CREATED="1546516467000" ID="ID_9a22cb8fe70b" MODIFIED="1546516467000" TEXT="插入排序"></node><node CREATED="1546516467000" ID="ID_ab84ec69720a" MODIFIED="1546516467000" TEXT="基数排序"></node><node CREATED="1546516467000" ID="ID_a28580430563" MODIFIED="1546516467000" TEXT="桶排序"></node><node CREATED="1546516467000" ID="ID_6b76df8bf3e6" MODIFIED="1546516467000" TEXT="堆排序"></node></node></node></node></node></node><node CREATED="1546516467000" ID="ID_592f42f839bf" POSITION="right" MODIFIED="1546516467000" TEXT="函数与递归"><node CREATED="1546516467000" ID="ID_a77deb434245" MODIFIED="1546516467000" TEXT="函数"><node CREATED="1546516467000" ID="ID_3b98e5e6338f" MODIFIED="1546516467000" TEXT="函数是由多条语句组成的能够实现特定功能的程序段，函数可以对程序进行模块化。"></node><node CREATED="1546516467000" ID="ID_79f8ea54eabc" MODIFIED="1546516467000" TEXT="函数一般包括"><node CREATED="1546516467000" ID="ID_5ec4d524ab00" MODIFIED="1546516467000" TEXT="函数名"></node><node CREATED="1546516467000" ID="ID_869df2c3c16a" MODIFIED="1546516467000" TEXT="参数"></node><node CREATED="1546516467000" ID="ID_966667d36606" MODIFIED="1546516467000" TEXT="返回值"></node><node CREATED="1546516467000" ID="ID_2c97a54756e8" MODIFIED="1546516467000" TEXT="函数体"></node></node></node><node CREATED="1546516467000" ID="ID_a5350374031b" MODIFIED="1546516467000" TEXT="递归"><node CREATED="1546516467000" ID="ID_dc7ccf298bbe" MODIFIED="1546516467000" TEXT="递归算法的基本思想是将一个大规模的复杂问题，层层转换为一个与原问题相同但是规模较小问题来求解，函数调用函数本身、高阶调用低阶。"></node><node CREATED="1546516467000" ID="ID_d99fa3d40992" MODIFIED="1546516467000" TEXT="使用递归的方法进行问题求解的基础是构造递归函数。"></node><node CREATED="1546516467000" ID="ID_e06b9890ad5a" MODIFIED="1546516467000" TEXT="递归过程可以总结为两个阶段"><node CREATED="1546516467000" ID="ID_7e6229476d8f" MODIFIED="1546516467000" TEXT="回推阶段"></node><node CREATED="1546516467000" ID="ID_f5919c40f76d" MODIFIED="1546516467000" TEXT="递推阶段"></node></node></node></node><node CREATED="1546516467000" ID="ID_754f27281d61" POSITION="right" MODIFIED="1546516467000" TEXT="程序设计"><node CREATED="1546516467000" ID="ID_c2181b30424a" MODIFIED="1546516467000" TEXT="类和对象"><node CREATED="1546516467000" ID="ID_b9f1175c5b51" MODIFIED="1546516467000" TEXT="对象是实体的逻辑模型，一个实体就是一个对象。"></node><node CREATED="1546516467000" ID="ID_88263de11ed8" MODIFIED="1546516467000" TEXT="类是将多个对象共有的特征抽取出来，形成这些对象的抽象模型。"></node><node CREATED="1546516467000" ID="ID_b4c16cda3034" MODIFIED="1546516467000" TEXT="类对象的抽象，而对象是类的实例。"></node><node CREATED="1546516467000" ID="ID_47b79a723983" MODIFIED="1546516467000" TEXT="对象"><node CREATED="1546516467000" ID="ID_da6733066565" MODIFIED="1546516467000" TEXT="属性"><node CREATED="1546516467000" ID="ID_f2fdbd376acd" MODIFIED="1546516467000" TEXT="属性是对象的性质，即用来描述和反映对象特征的参数。"></node><node CREATED="1546516467000" ID="ID_6f456693bd34" MODIFIED="1546516467000" TEXT="不同类的对象有不同属性，同一类的不同对象的同一个属性可以有不同值。"></node></node><node CREATED="1546516467000" ID="ID_515d00933be7" MODIFIED="1546516467000" TEXT="方法"><node CREATED="1546516467000" ID="ID_ca9ec8c455cd" MODIFIED="1546516467000" TEXT="对象自身可以进行的动作或行为，是对象自身包含的功能。"></node></node><node CREATED="1546516467000" ID="ID_6dd085d2dc7c" MODIFIED="1546516467000" TEXT="事件"><node CREATED="1546516467000" ID="ID_61107063daf8" MODIFIED="1546516467000" TEXT="预先设置好的，可以被对象触发的动作。"></node><node CREATED="1546516467000" ID="ID_c113211aacb7" MODIFIED="1546516467000" TEXT="只要用户设计好了某个事件的代码，对象在响应了该事件后，就会执行相应代码。"></node></node></node></node><node CREATED="1546516467000" ID="ID_c3bb707011c5" MODIFIED="1546516467000" TEXT="visual basic 编程"><node CREATED="1546516467000" ID="ID_8490ecad7911" MODIFIED="1546516467000" TEXT="类"><node CREATED="1546516467000" ID="ID_fa43acbd22cc" MODIFIED="1546516467000" TEXT="VB中类可以由系统提供。"></node></node><node CREATED="1546516467000" ID="ID_4285a5322f1a" MODIFIED="1546516467000" TEXT="对象"><node CREATED="1546516467000" ID="ID_25426f9870cf" MODIFIED="1546516467000" TEXT="用户在窗体上放置一个控件就是创建该控件类的一个对象。"></node></node><node CREATED="1546516467000" ID="ID_7955ced3c26e" MODIFIED="1546516467000" TEXT="属性"><node CREATED="1546516467000" ID="ID_f286227654a5" MODIFIED="1546516467000" TEXT="VB中的对象都有自己的属性，常见的属性有标题、名称、字体等。"></node></node><node CREATED="1546516467000" ID="ID_71ce132deb4b" MODIFIED="1546516467000" TEXT="事件过程"><node CREATED="1546516467000" ID="ID_739eac4c8d1a" MODIFIED="1546516467000" TEXT="为对象的事件编写程序。"></node></node><node CREATED="1546516467000" ID="ID_0d347320161c" MODIFIED="1546516467000" TEXT="程序调试"><node CREATED="1546516467000" ID="ID_2ebe85135ed6" MODIFIED="1546516467000" TEXT="掌握正确的调试方法，能够迅速、有效地发现和纠正程序错误。"></node><node CREATED="1546516467000" ID="ID_216f64505a44" MODIFIED="1546516467000" TEXT="调试过程的常用办法是：逐语句执行程序，观察循环结构程序的控制流程，并使用本地窗口，观察变量的变化。"></node></node></node></node></node></map>